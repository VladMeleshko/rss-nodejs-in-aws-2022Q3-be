service: import-service

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  httpApi:
    cors: true
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    POSTGRES_HOST: ${env:POSTGRES_HOST}
    POSTGRES_PORT: ${env:POSTGRES_PORT}
    POSTGRES_USER: ${env:POSTGRES_USER}
    POSTGRES_PASSWORD: ${env:POSTGRES_PASSWORD}
    POSTGRES_DB: ${env:POSTGRES_DB}
    SQS_URL:
      Ref: catalogItemsQueue
    SNS_ARN:
      Ref: createProductTopic
  iam:
    role:
      statements:
        - Effect: Allow
          Action: s3:ListBucket
          Resource:
            - arn:aws:s3:::${env:BUCKET_NAME}
        - Effect: Allow
          Action:
            - s3:*
          Resource:
            - arn:aws:s3:::${env:BUCKET_NAME}/*
        - Effect: Allow
          Action: 
            - sqs:*
          Resource:
            - Fn::GetAtt: 
                - catalogItemsQueue
                - Arn
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            Ref: createProductTopic

plugins:
  - serverless-webpack

functions:
  importProductsFile:
    handler: src/importProductsFile.importProductsFile
    events:
      - httpApi:
          method: get
          path: /import
  # importProductsFile:
  #   handler: src/importProductsFile.importProductsFile
  #   events:
  #     - http:
  #         method: get
  #         path: /import
  #         cors: true
  #         request:
  #           parameters:
  #             querystrings:
  #               name: true
  importFileParser:
    handler: src/importFileParser.importFileParser
    events:
      - s3:
          bucket: ${env:BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: src/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${env:EMAIL}
        Protocol: email
        TopicArn:
          Ref: createProductTopic
        FilterPolicy:
          count: [{"numeric": [">=", 100]}]
    SNSSubscriptionSmallCount:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${env:ADDITIONAL_EMAIL}
        Protocol: email
        TopicArn:
          Ref: createProductTopic
        FilterPolicy:
          count: [{"numeric": ["<", 100]}]